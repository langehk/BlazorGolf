@page "/faceit"
@using WebApp.Data.Faceit
@inject IFaceitService faceitService

<h3>Faceit</h3>

<div style="display: flex; width:400px; margin-bottom: 40px;">
    <MudTextField @bind-Value="SearchValue" Label="Player name" Variant="Variant.Text"></MudTextField>
    <MudButton Size="Size.Small" Variant="Variant.Filled" OnClick="@SearchPlayer">Search</MudButton>
</div>

@if (SearchValue != null)
{
    <div class="display-player-data">
        <p>Nickname: @PlayerData.Nickname</p>
        <p>Country: @PlayerData.Country</p>
    </div>
    <div class="display-player-csgo-data">
        <p>Region: @CsgoData.Region </p>
        <p>Faceit lvl: @CsgoData.Skill_level </p>
        <p>Elo: @CsgoData.Faceit_elo </p>
    </div>

    @if (PlayerData.Games != null && CsgoData.Faceit_elo > 0 )
    {
        <div class="display-player-csgo-data">
        
            @if (totalSkillLevelDiff < 0)
            {
                <p style="color:red;">Your level is worse than @JosenFaceitData.Nickname, by : (@totalSkillLevelDiff) lvl(s)</p>
            }
            else
            {
                <p style="color:green;">Your level is better than @JosenFaceitData.Nickname, by : (@totalSkillLevelDiff) lvl(s) </p>
            }

            @if (totalFaceitEloDiff < 0)
            {
                <p style="color:red;">Your elo is worse than @JosenFaceitData.Nickname, by: (@totalFaceitEloDiff) elo</p>
            }
            else
            {
                <p style="color:green;">Your elo is better than @JosenFaceitData.Nickname, by : (@totalFaceitEloDiff) elo </p>
            }
        </div>
    }


    @if(playerStatsList.Count > 0)
    {
    <div style="font:bold">Last 10 matches:</div>
    <table>
        <tr>
            <th>Kills</th>
            <th>Deaths</th>
            <th>K/D</th>
            <th>K/R</th>
            <th>MVPs</th>
        </tr>
        @foreach (var item in playerStatsList)
        {
            <tr>
                <th>@item.Kills</th>
                <th>@item.Deaths</th>
                <th>@item.KDRatio</th>
                <th>@item.KRRatio</th>
                <th>@item.MVPs</th>
            </tr>
        }
    </table>
    }
}



@code {

    private FaceitData PlayerData = new FaceitData();
    private GameData CsgoData = new GameData();
    private List<PlayerStats> playerStatsList = new List<PlayerStats>(); // Contains all data from match history. (Kills, deaths, KR, KD, MVPs)

    private GameData JosenCsgoData = new GameData();
    private FaceitData JosenFaceitData = new FaceitData();

    private int totalSkillLevelDiff = 0;
    private int totalFaceitEloDiff = 0;

    public string SearchValue { get; set; }

    protected override async Task OnInitializedAsync()
    {
        JosenData();
    }

    private async void SearchPlayer()
    {
        PlayerData = await faceitService.GetPlayerDetailsByName(SearchValue);

        CsgoData = PlayerData.Games.Where(x => x.Key.Contains("csgo")).FirstOrDefault().Value;

        totalSkillLevelDiff = CsgoData.Skill_level - JosenCsgoData.Skill_level;
        totalFaceitEloDiff = CsgoData.Faceit_elo - JosenCsgoData.Faceit_elo;


        var matchHistory = await faceitService.GetMatchHistoryAsync(PlayerData.Player_id.ToString(), 10);

        List<string> matchIds = new List<string>();

        foreach (var item in matchHistory.Items)
        {
            matchIds.Add(item.Match_id);
        }

        playerStatsList = new List<PlayerStats>();
        // Indlæser alle stats baseret på sidste matches.
        foreach (var id in matchIds)
        {
            var playerMatchHistoryStats = await faceitService.GetMatchStatsAsync(id);

            var playersTeam = playerMatchHistoryStats.Rounds.SelectMany(x => x.Teams.Where(x => x.Players.Any(x => x.Player_id == PlayerData.Player_id.ToString()))).ToList();

            var playerStats = playersTeam.SelectMany(x => x.Players.Where(x => x.Player_id == PlayerData.Player_id.ToString())).ToList().FirstOrDefault().Player_Stats;

            playerStatsList.Add(playerStats);
        }
    }


    private async void JosenData()
    {
        JosenFaceitData = await faceitService.GetPlayerDetailsByName("Tovebiceps");

        JosenCsgoData = JosenFaceitData.Games.Where(x => x.Key.Contains("csgo")).FirstOrDefault().Value;
    }
}
